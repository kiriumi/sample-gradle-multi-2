apply plugin: 'at.bxm.svntools'

allprojects {

    apply plugin: 'java'

    group = 'sample.gradle.multi'

    ext.preDistsDir = buildDirectory.dir('preDistributions').get()

    repositories {
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
        mavenLocal()
    }
}

subprojects {

    apply from: '../master/scripts/java.gradle'
    apply from: '../master/scripts/test.gradle'
    apply from: '../master/scripts/distribution.gradle'
    apply from: '../master/scripts/db-migration.gradle'

    // UTのみバージョン指定をするので、SNAPSHOTを付ける
    // CT以降は付けないので、そのままにする
    version = version == 'unspecified' ? version : version + '-SNAPSHOT'

    repositories {
        maven { url "https://repository.primefaces.org/" }
    }

    ext {
        serverDir = file('src/server')
        serverReleaseDir = file("${serverDir}/release")
    }

    sourceSets {
        server.resources {
            srcDirs += file("${serverReleaseDir}/conf")
        }

        test.runtimeClasspath += server.output
    }
}

wrapper {
    gradleVersion = '6.3'
}

def projectIfPresent(String projectPath) {

    if(findProject(projectPath)) {
        return project(projectPath)
    }

    def projectName = projectPath.substring(1)
    return "${group}:${projectName}:latest.integration"
}

task commitArchives(type: at.bxm.gradleplugins.svntools.tasks.SvnCommit) {

    subprojects.each { subproject ->
        source << subproject.buildDirectory.getAsFile().get()
    }

    recursive = true
    commitMessage = 'ビルド結果をコミット'
}

apply from: 'scripts/distribution-all.gradle' // ext.preDistsDir を読込む必要があるため、それより後に記述

